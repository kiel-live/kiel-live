package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.47

import (
	"context"
	"fmt"

	"github.com/kiel-live/kiel-live/graphql/graph/model"
	"github.com/kiel-live/kiel-live/shared/models"
)

// SetVehicle is the resolver for the setVehicle field.
func (r *mutationResolver) SetVehicle(ctx context.Context, vehicle model.VehicleInput) (*models.Vehicle, error) {
	_vehicle := vehicle.ToVehicle()
	return _vehicle, r.Hub.SetVehicle(ctx, _vehicle)
}

// RemoveVehicle is the resolver for the removeVehicle field.
func (r *mutationResolver) RemoveVehicle(ctx context.Context, id string) (bool, error) {
	return true, r.Hub.DeleteVehicle(ctx, id)
}

// SetStop is the resolver for the setStop field.
func (r *mutationResolver) SetStop(ctx context.Context, stop model.StopInput) (*models.Stop, error) {
	_stop := stop.ToStop()
	return _stop, r.Hub.SetStop(ctx, _stop)
}

// RemoveStop is the resolver for the removeStop field.
func (r *mutationResolver) RemoveStop(ctx context.Context, id string) (bool, error) {
	return true, r.Hub.DeleteStop(ctx, id)
}

// SetRoute is the resolver for the setRoute field.
func (r *mutationResolver) SetRoute(ctx context.Context, route model.RouteInput) (*models.Route, error) {
	panic(fmt.Errorf("not implemented: SetRoute - setRoute"))
}

// RemoveRoute is the resolver for the removeRoute field.
func (r *mutationResolver) RemoveRoute(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: RemoveRoute - removeRoute"))
}

// SetTrip is the resolver for the setTrip field.
func (r *mutationResolver) SetTrip(ctx context.Context, trip model.TripInput) (*models.Trip, error) {
	panic(fmt.Errorf("not implemented: SetTrip - setTrip"))
}

// RemoveTrip is the resolver for the removeTrip field.
func (r *mutationResolver) RemoveTrip(ctx context.Context, id string) (bool, error) {
	panic(fmt.Errorf("not implemented: RemoveTrip - removeTrip"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

type mutationResolver struct{ *Resolver }
