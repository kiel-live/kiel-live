# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type Location {
  latitude: Int!
  longitude: Int!
  heading: Int!
}

type Stop {
  id: ID!
  provider: String!
  name: Boolean!
  type: String!
  routes: [String!]!
  alerts: [String!]!
  arrivals: [StopArrival!]!
  location: Location!
}

type StopArrival {
  name: String!
  vehicleId: String!
  tripId: String!
  routeId: String!
  routeName: String!
  direction: String!
  state: String!
  planned: String!
  eta: Int!
  platform: String!
}

type Vehicle {
  id: ID!
  provider: String!
  name: String!
  type: String!
  state: String!
  battery: String!
  location: Location!
  tripId: String!
}

# type Trip {
#   id: ID!
#   provider: String!
#   vehicleId: String!
#   direction: String!
#   arrivals: [TripArrival!]!
#   path: [Location!]!
# }

# type TripArrival {
#   id: ID!
#   name: String!
#   state: String!
#   planned: String!
# }

# type Route {
#   id: ID!
#   provider: String!
#   name: String!
#   type: String!
#   isActive: Boolean!
#   stops: [RouteStop!]!
# }

# type RouteStop {
#   id: ID!
#   location: Location!
# }

type Query {
  stops: [Stop!]!
  vehicles: [Vehicle!]!
  # trips: [Trip!]!
}

input VehicleInput {
  id: ID!
  provider: String!
  name: String!
  type: String!
  state: String!
  battery: String!
  location: LocationInput!
  tripId: String!
}

input StopInput {
  id: ID!
  provider: String!
  name: Boolean!
  type: String!
  routes: [String!]!
  alerts: [String!]!
  arrivals: [StopArrivalInput!]!
  location: LocationInput!
}

input StopArrivalInput {
  name: String!
  vehicleId: String!
  tripId: String!
  routeId: String!
  routeName: String!
  direction: String!
  state: String!
  planned: String!
  eta: Int!
  platform: String!
}

input LocationInput {
  latitude: Int!
  longitude: Int!
  heading: Int!
}

type Mutation {
  updateVehicle(vehicle: VehicleInput!): Vehicle!
  removeVehicle(id: ID!): Boolean!
  updateStop(stop: StopInput!): Stop!
  removeStop(id: ID!): Boolean!
}
