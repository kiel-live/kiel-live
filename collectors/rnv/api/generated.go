// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package api

import (
	"context"
	"encoding/json"
	"fmt"

	"github.com/Khan/genqlient/graphql"
)

// __getStationsPageInput is used internally by genqlient
type __getStationsPageInput struct {
	Cursor string `json:"cursor"`
}

// GetCursor returns __getStationsPageInput.Cursor, and is useful for accessing the field via an interface.
func (v *__getStationsPageInput) GetCursor() string { return v.Cursor }

// getStationsPageResponse is returned by getStationsPage on success.
type getStationsPageResponse struct {
	Stations getStationsPageStationsSearchResult `json:"stations"`
}

// GetStations returns getStationsPageResponse.Stations, and is useful for accessing the field via an interface.
func (v *getStationsPageResponse) GetStations() getStationsPageStationsSearchResult {
	return v.Stations
}

// getStationsPageStationsSearchResult includes the requested fields of the GraphQL type SearchResult.
// The GraphQL type's documentation follows.
//
// Datentyp zur Pagniation
type getStationsPageStationsSearchResult struct {
	TotalCount int                                                  `json:"totalCount"`
	Cursor     string                                               `json:"cursor"`
	Elements   []getStationsPageStationsSearchResultElementsElement `json:"-"`
}

// GetTotalCount returns getStationsPageStationsSearchResult.TotalCount, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResult) GetTotalCount() int { return v.TotalCount }

// GetCursor returns getStationsPageStationsSearchResult.Cursor, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResult) GetCursor() string { return v.Cursor }

// GetElements returns getStationsPageStationsSearchResult.Elements, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResult) GetElements() []getStationsPageStationsSearchResultElementsElement {
	return v.Elements
}

func (v *getStationsPageStationsSearchResult) UnmarshalJSON(b []byte) error {

	if string(b) == "null" {
		return nil
	}

	var firstPass struct {
		*getStationsPageStationsSearchResult
		Elements []json.RawMessage `json:"elements"`
		graphql.NoUnmarshalJSON
	}
	firstPass.getStationsPageStationsSearchResult = v

	err := json.Unmarshal(b, &firstPass)
	if err != nil {
		return err
	}

	{
		dst := &v.Elements
		src := firstPass.Elements
		*dst = make(
			[]getStationsPageStationsSearchResultElementsElement,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			if len(src) != 0 && string(src) != "null" {
				err = __unmarshalgetStationsPageStationsSearchResultElementsElement(
					src, dst)
				if err != nil {
					return fmt.Errorf(
						"Unable to unmarshal getStationsPageStationsSearchResult.Elements: %w", err)
				}
			}
		}
	}
	return nil
}

type __premarshalgetStationsPageStationsSearchResult struct {
	TotalCount int `json:"totalCount"`

	Cursor string `json:"cursor"`

	Elements []json.RawMessage `json:"elements"`
}

func (v *getStationsPageStationsSearchResult) MarshalJSON() ([]byte, error) {
	premarshaled, err := v.__premarshalJSON()
	if err != nil {
		return nil, err
	}
	return json.Marshal(premarshaled)
}

func (v *getStationsPageStationsSearchResult) __premarshalJSON() (*__premarshalgetStationsPageStationsSearchResult, error) {
	var retval __premarshalgetStationsPageStationsSearchResult

	retval.TotalCount = v.TotalCount
	retval.Cursor = v.Cursor
	{

		dst := &retval.Elements
		src := v.Elements
		*dst = make(
			[]json.RawMessage,
			len(src))
		for i, src := range src {
			dst := &(*dst)[i]
			var err error
			*dst, err = __marshalgetStationsPageStationsSearchResultElementsElement(
				&src)
			if err != nil {
				return nil, fmt.Errorf(
					"Unable to marshal getStationsPageStationsSearchResult.Elements: %w", err)
			}
		}
	}
	return &retval, nil
}

// getStationsPageStationsSearchResultElementsElement includes the requested fields of the GraphQL interface Element.
//
// getStationsPageStationsSearchResultElementsElement is implemented by the following types:
// getStationsPageStationsSearchResultElementsPole
// getStationsPageStationsSearchResultElementsStation
// getStationsPageStationsSearchResultElementsJourney
// getStationsPageStationsSearchResultElementsUffbasse
// getStationsPageStationsSearchResultElementsPlatform
// getStationsPageStationsSearchResultElementsZone
// getStationsPageStationsSearchResultElementsLine
// getStationsPageStationsSearchResultElementsLineGroup
// getStationsPageStationsSearchResultElementsTag
// getStationsPageStationsSearchResultElementsVRNStation
// The GraphQL type's documentation follows.
//
// Hilfskonstrukt zur Pagination
type getStationsPageStationsSearchResultElementsElement interface {
	implementsGraphQLInterfacegetStationsPageStationsSearchResultElementsElement()
	// GetTypename returns the receiver's concrete GraphQL type-name (see interface doc for possible values).
	GetTypename() string
}

func (v *getStationsPageStationsSearchResultElementsPole) implementsGraphQLInterfacegetStationsPageStationsSearchResultElementsElement() {
}
func (v *getStationsPageStationsSearchResultElementsStation) implementsGraphQLInterfacegetStationsPageStationsSearchResultElementsElement() {
}
func (v *getStationsPageStationsSearchResultElementsJourney) implementsGraphQLInterfacegetStationsPageStationsSearchResultElementsElement() {
}
func (v *getStationsPageStationsSearchResultElementsUffbasse) implementsGraphQLInterfacegetStationsPageStationsSearchResultElementsElement() {
}
func (v *getStationsPageStationsSearchResultElementsPlatform) implementsGraphQLInterfacegetStationsPageStationsSearchResultElementsElement() {
}
func (v *getStationsPageStationsSearchResultElementsZone) implementsGraphQLInterfacegetStationsPageStationsSearchResultElementsElement() {
}
func (v *getStationsPageStationsSearchResultElementsLine) implementsGraphQLInterfacegetStationsPageStationsSearchResultElementsElement() {
}
func (v *getStationsPageStationsSearchResultElementsLineGroup) implementsGraphQLInterfacegetStationsPageStationsSearchResultElementsElement() {
}
func (v *getStationsPageStationsSearchResultElementsTag) implementsGraphQLInterfacegetStationsPageStationsSearchResultElementsElement() {
}
func (v *getStationsPageStationsSearchResultElementsVRNStation) implementsGraphQLInterfacegetStationsPageStationsSearchResultElementsElement() {
}

func __unmarshalgetStationsPageStationsSearchResultElementsElement(b []byte, v *getStationsPageStationsSearchResultElementsElement) error {
	if string(b) == "null" {
		return nil
	}

	var tn struct {
		TypeName string `json:"__typename"`
	}
	err := json.Unmarshal(b, &tn)
	if err != nil {
		return err
	}

	switch tn.TypeName {
	case "Pole":
		*v = new(getStationsPageStationsSearchResultElementsPole)
		return json.Unmarshal(b, *v)
	case "Station":
		*v = new(getStationsPageStationsSearchResultElementsStation)
		return json.Unmarshal(b, *v)
	case "Journey":
		*v = new(getStationsPageStationsSearchResultElementsJourney)
		return json.Unmarshal(b, *v)
	case "Uffbasse":
		*v = new(getStationsPageStationsSearchResultElementsUffbasse)
		return json.Unmarshal(b, *v)
	case "Platform":
		*v = new(getStationsPageStationsSearchResultElementsPlatform)
		return json.Unmarshal(b, *v)
	case "Zone":
		*v = new(getStationsPageStationsSearchResultElementsZone)
		return json.Unmarshal(b, *v)
	case "Line":
		*v = new(getStationsPageStationsSearchResultElementsLine)
		return json.Unmarshal(b, *v)
	case "LineGroup":
		*v = new(getStationsPageStationsSearchResultElementsLineGroup)
		return json.Unmarshal(b, *v)
	case "Tag":
		*v = new(getStationsPageStationsSearchResultElementsTag)
		return json.Unmarshal(b, *v)
	case "VRNStation":
		*v = new(getStationsPageStationsSearchResultElementsVRNStation)
		return json.Unmarshal(b, *v)
	case "":
		return fmt.Errorf(
			"response was missing Element.__typename")
	default:
		return fmt.Errorf(
			`unexpected concrete type for getStationsPageStationsSearchResultElementsElement: "%v"`, tn.TypeName)
	}
}

func __marshalgetStationsPageStationsSearchResultElementsElement(v *getStationsPageStationsSearchResultElementsElement) ([]byte, error) {

	var typename string
	switch v := (*v).(type) {
	case *getStationsPageStationsSearchResultElementsPole:
		typename = "Pole"

		result := struct {
			TypeName string `json:"__typename"`
			*getStationsPageStationsSearchResultElementsPole
		}{typename, v}
		return json.Marshal(result)
	case *getStationsPageStationsSearchResultElementsStation:
		typename = "Station"

		result := struct {
			TypeName string `json:"__typename"`
			*getStationsPageStationsSearchResultElementsStation
		}{typename, v}
		return json.Marshal(result)
	case *getStationsPageStationsSearchResultElementsJourney:
		typename = "Journey"

		result := struct {
			TypeName string `json:"__typename"`
			*getStationsPageStationsSearchResultElementsJourney
		}{typename, v}
		return json.Marshal(result)
	case *getStationsPageStationsSearchResultElementsUffbasse:
		typename = "Uffbasse"

		result := struct {
			TypeName string `json:"__typename"`
			*getStationsPageStationsSearchResultElementsUffbasse
		}{typename, v}
		return json.Marshal(result)
	case *getStationsPageStationsSearchResultElementsPlatform:
		typename = "Platform"

		result := struct {
			TypeName string `json:"__typename"`
			*getStationsPageStationsSearchResultElementsPlatform
		}{typename, v}
		return json.Marshal(result)
	case *getStationsPageStationsSearchResultElementsZone:
		typename = "Zone"

		result := struct {
			TypeName string `json:"__typename"`
			*getStationsPageStationsSearchResultElementsZone
		}{typename, v}
		return json.Marshal(result)
	case *getStationsPageStationsSearchResultElementsLine:
		typename = "Line"

		result := struct {
			TypeName string `json:"__typename"`
			*getStationsPageStationsSearchResultElementsLine
		}{typename, v}
		return json.Marshal(result)
	case *getStationsPageStationsSearchResultElementsLineGroup:
		typename = "LineGroup"

		result := struct {
			TypeName string `json:"__typename"`
			*getStationsPageStationsSearchResultElementsLineGroup
		}{typename, v}
		return json.Marshal(result)
	case *getStationsPageStationsSearchResultElementsTag:
		typename = "Tag"

		result := struct {
			TypeName string `json:"__typename"`
			*getStationsPageStationsSearchResultElementsTag
		}{typename, v}
		return json.Marshal(result)
	case *getStationsPageStationsSearchResultElementsVRNStation:
		typename = "VRNStation"

		result := struct {
			TypeName string `json:"__typename"`
			*getStationsPageStationsSearchResultElementsVRNStation
		}{typename, v}
		return json.Marshal(result)
	case nil:
		return []byte("null"), nil
	default:
		return nil, fmt.Errorf(
			`unexpected concrete type for getStationsPageStationsSearchResultElementsElement: "%T"`, v)
	}
}

// getStationsPageStationsSearchResultElementsJourney includes the requested fields of the GraphQL type Journey.
// The GraphQL type's documentation follows.
//
// Eine Fahrt
type getStationsPageStationsSearchResultElementsJourney struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getStationsPageStationsSearchResultElementsJourney.Typename, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsJourney) GetTypename() string { return v.Typename }

// getStationsPageStationsSearchResultElementsLine includes the requested fields of the GraphQL type Line.
// The GraphQL type's documentation follows.
//
// Eine Linie
type getStationsPageStationsSearchResultElementsLine struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getStationsPageStationsSearchResultElementsLine.Typename, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsLine) GetTypename() string { return v.Typename }

// getStationsPageStationsSearchResultElementsLineGroup includes the requested fields of the GraphQL type LineGroup.
// The GraphQL type's documentation follows.
//
// Eine Liniengruppe
type getStationsPageStationsSearchResultElementsLineGroup struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getStationsPageStationsSearchResultElementsLineGroup.Typename, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsLineGroup) GetTypename() string {
	return v.Typename
}

// getStationsPageStationsSearchResultElementsPlatform includes the requested fields of the GraphQL type Platform.
// The GraphQL type's documentation follows.
//
// Ein Steig oder Gleis
type getStationsPageStationsSearchResultElementsPlatform struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getStationsPageStationsSearchResultElementsPlatform.Typename, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsPlatform) GetTypename() string { return v.Typename }

// getStationsPageStationsSearchResultElementsPole includes the requested fields of the GraphQL type Pole.
// The GraphQL type's documentation follows.
//
// Ein Mast
type getStationsPageStationsSearchResultElementsPole struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getStationsPageStationsSearchResultElementsPole.Typename, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsPole) GetTypename() string { return v.Typename }

// getStationsPageStationsSearchResultElementsStation includes the requested fields of the GraphQL type Station.
// The GraphQL type's documentation follows.
//
// Eine Haltestelle
type getStationsPageStationsSearchResultElementsStation struct {
	Typename string `json:"__typename"`
	// hafasID entspricht der ID
	HafasID string `json:"hafasID"`
	// Globale ID im Format cc:nnnnn:n*
	GlobalID string                                                             `json:"globalID"`
	LongName string                                                             `json:"longName"`
	Place    string                                                             `json:"place"`
	Location getStationsPageStationsSearchResultElementsStationLocationGeoPoint `json:"location"`
}

// GetTypename returns getStationsPageStationsSearchResultElementsStation.Typename, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsStation) GetTypename() string { return v.Typename }

// GetHafasID returns getStationsPageStationsSearchResultElementsStation.HafasID, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsStation) GetHafasID() string { return v.HafasID }

// GetGlobalID returns getStationsPageStationsSearchResultElementsStation.GlobalID, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsStation) GetGlobalID() string { return v.GlobalID }

// GetLongName returns getStationsPageStationsSearchResultElementsStation.LongName, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsStation) GetLongName() string { return v.LongName }

// GetPlace returns getStationsPageStationsSearchResultElementsStation.Place, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsStation) GetPlace() string { return v.Place }

// GetLocation returns getStationsPageStationsSearchResultElementsStation.Location, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsStation) GetLocation() getStationsPageStationsSearchResultElementsStationLocationGeoPoint {
	return v.Location
}

// getStationsPageStationsSearchResultElementsStationLocationGeoPoint includes the requested fields of the GraphQL type GeoPoint.
// The GraphQL type's documentation follows.
//
// Geokoordinate
type getStationsPageStationsSearchResultElementsStationLocationGeoPoint struct {
	// Breitgrad in der Dezimalschreibweise
	Lat float64 `json:"lat"`
	// Längengrad in der Dezimalschreibweise
	Long float64 `json:"long"`
}

// GetLat returns getStationsPageStationsSearchResultElementsStationLocationGeoPoint.Lat, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsStationLocationGeoPoint) GetLat() float64 {
	return v.Lat
}

// GetLong returns getStationsPageStationsSearchResultElementsStationLocationGeoPoint.Long, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsStationLocationGeoPoint) GetLong() float64 {
	return v.Long
}

// getStationsPageStationsSearchResultElementsTag includes the requested fields of the GraphQL type Tag.
// The GraphQL type's documentation follows.
//
// Ein Tag, um Informationen zu Tabable Datentypen zu annotieren
type getStationsPageStationsSearchResultElementsTag struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getStationsPageStationsSearchResultElementsTag.Typename, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsTag) GetTypename() string { return v.Typename }

// getStationsPageStationsSearchResultElementsUffbasse includes the requested fields of the GraphQL type Uffbasse.
// The GraphQL type's documentation follows.
//
// News und Ticker
type getStationsPageStationsSearchResultElementsUffbasse struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getStationsPageStationsSearchResultElementsUffbasse.Typename, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsUffbasse) GetTypename() string { return v.Typename }

// getStationsPageStationsSearchResultElementsVRNStation includes the requested fields of the GraphQL type VRNStation.
// The GraphQL type's documentation follows.
//
// VDV 431 Station
type getStationsPageStationsSearchResultElementsVRNStation struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getStationsPageStationsSearchResultElementsVRNStation.Typename, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsVRNStation) GetTypename() string {
	return v.Typename
}

// getStationsPageStationsSearchResultElementsZone includes the requested fields of the GraphQL type Zone.
// The GraphQL type's documentation follows.
//
// Eine Wabe
type getStationsPageStationsSearchResultElementsZone struct {
	Typename string `json:"__typename"`
}

// GetTypename returns getStationsPageStationsSearchResultElementsZone.Typename, and is useful for accessing the field via an interface.
func (v *getStationsPageStationsSearchResultElementsZone) GetTypename() string { return v.Typename }

func getStationsPage(
	ctx context.Context,
	client graphql.Client,
	cursor string,
) (*getStationsPageResponse, error) {
	req := &graphql.Request{
		OpName: "getStationsPage",
		Query: `
query getStationsPage ($cursor: String!) {
	stations(after: $cursor) {
		totalCount
		cursor
		elements {
			__typename
			... on Station {
				hafasID
				globalID
				longName
				place
				location {
					lat
					long
				}
			}
		}
	}
}
`,
		Variables: &__getStationsPageInput{
			Cursor: cursor,
		},
	}
	var err error

	var data getStationsPageResponse
	resp := &graphql.Response{Data: &data}

	err = client.MakeRequest(
		ctx,
		req,
		resp,
	)

	return &data, err
}
